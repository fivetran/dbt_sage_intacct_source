{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.3", "generated_at": "2024-02-27T16:23:25.165072Z", "invocation_id": "7c2ecf55-6b5e-4cdb-8181-c8348e3d1e34", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:24.307345Z", "completed_at": "2024-02-27T16:23:24.320529Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:24.322991Z", "completed_at": "2024-02-27T16:23:24.323004Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019659996032714844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct_source.stg_sage_intacct__ap_bill_item_tmp", "compiled": true, "compiled_code": "\n\nselect * from \"postgres\".\"sage_intacct_source_integration_tests_2\".\"sage_intacct__ap_bill_item\"", "relation_name": "\"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__ap_bill_item_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:24.312942Z", "completed_at": "2024-02-27T16:23:24.321016Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:24.323845Z", "completed_at": "2024-02-27T16:23:24.323849Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.02042102813720703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct_source.stg_sage_intacct__ap_bill_tmp", "compiled": true, "compiled_code": "\n\nselect * from \"postgres\".\"sage_intacct_source_integration_tests_2\".\"sage_intacct__ap_bill\"", "relation_name": "\"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__ap_bill_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:24.315411Z", "completed_at": "2024-02-27T16:23:24.322010Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:24.324916Z", "completed_at": "2024-02-27T16:23:24.324922Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020830869674682617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct_source.stg_sage_intacct__ar_invoice_item_tmp", "compiled": true, "compiled_code": "\n\nselect * from \"postgres\".\"sage_intacct_source_integration_tests_2\".\"sage_intacct__ar_invoice_item\"", "relation_name": "\"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__ar_invoice_item_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:24.317913Z", "completed_at": "2024-02-27T16:23:24.322357Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:24.325237Z", "completed_at": "2024-02-27T16:23:24.325241Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.020981788635253906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct_source.stg_sage_intacct__ar_invoice_tmp", "compiled": true, "compiled_code": "\n\nselect * from \"postgres\".\"sage_intacct_source_integration_tests_2\".\"sage_intacct__ar_invoice\"", "relation_name": "\"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__ar_invoice_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:24.339601Z", "completed_at": "2024-02-27T16:23:24.340668Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:24.342502Z", "completed_at": "2024-02-27T16:23:24.342508Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01418924331665039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.sage_intacct_source_integration_tests.sage_intacct__ap_bill", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:24.330702Z", "completed_at": "2024-02-27T16:23:24.341080Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:24.342781Z", "completed_at": "2024-02-27T16:23:24.342784Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016701936721801758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct_source.stg_sage_intacct__gl_account_tmp", "compiled": true, "compiled_code": "select * from \"postgres\".\"sage_intacct_source_integration_tests_2\".\"sage_intacct__gl_account\"", "relation_name": "\"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__gl_account_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:24.333941Z", "completed_at": "2024-02-27T16:23:24.341987Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:24.344644Z", "completed_at": "2024-02-27T16:23:24.344647Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.017404794692993164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct_source.stg_sage_intacct__gl_batch_tmp", "compiled": true, "compiled_code": "select * \nfrom \"postgres\".\"sage_intacct_source_integration_tests_2\".\"sage_intacct__gl_batch\"", "relation_name": "\"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__gl_batch_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:24.337227Z", "completed_at": "2024-02-27T16:23:24.342240Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:24.344918Z", "completed_at": "2024-02-27T16:23:24.344921Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01733994483947754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct_source.stg_sage_intacct__gl_detail_tmp", "compiled": true, "compiled_code": "select * from \"postgres\".\"sage_intacct_source_integration_tests_2\".\"sage_intacct__gl_detail\"", "relation_name": "\"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__gl_detail_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:24.349338Z", "completed_at": "2024-02-27T16:23:24.350451Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:24.356217Z", "completed_at": "2024-02-27T16:23:24.356224Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.010834932327270508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.sage_intacct_source_integration_tests.sage_intacct__ap_bill_item", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:24.350735Z", "completed_at": "2024-02-27T16:23:24.351623Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:24.356577Z", "completed_at": "2024-02-27T16:23:24.356580Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010951995849609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.sage_intacct_source_integration_tests.sage_intacct__ar_invoice", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:24.352843Z", "completed_at": "2024-02-27T16:23:24.353778Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:24.358468Z", "completed_at": "2024-02-27T16:23:24.358475Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.011034965515136719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.sage_intacct_source_integration_tests.sage_intacct__ar_invoice_item", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:24.354076Z", "completed_at": "2024-02-27T16:23:24.355770Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:24.358723Z", "completed_at": "2024-02-27T16:23:24.358726Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.011117219924926758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.sage_intacct_source_integration_tests.sage_intacct__gl_account", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:24.362733Z", "completed_at": "2024-02-27T16:23:24.363905Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:24.378322Z", "completed_at": "2024-02-27T16:23:24.378329Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.019088029861450195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.sage_intacct_source_integration_tests.sage_intacct__gl_batch", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:24.364326Z", "completed_at": "2024-02-27T16:23:24.365358Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:24.378638Z", "completed_at": "2024-02-27T16:23:24.378641Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019223928451538086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.sage_intacct_source_integration_tests.sage_intacct__gl_detail", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:24.366668Z", "completed_at": "2024-02-27T16:23:24.741247Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:24.743102Z", "completed_at": "2024-02-27T16:23:24.743110Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.40809202194213867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct_source.stg_sage_intacct__ap_bill_item", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__ap_bill_item_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    accountkey\n    \n as \n    \n    accountkey\n    \n, \n    \n    \n    accountno\n    \n as \n    \n    accountno\n    \n, \n    \n    \n    accounttitle\n    \n as \n    \n    accounttitle\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    basecurr\n    \n as \n    \n    basecurr\n    \n, \n    \n    \n    baselocation\n    \n as \n    \n    baselocation\n    \n, \n    \n    \n    billable\n    \n as \n    \n    billable\n    \n, \n    \n    \n    billed\n    \n as \n    \n    billed\n    \n, \n    \n    \n    classid\n    \n as \n    \n    classid\n    \n, \n    \n    \n    classname\n    \n as \n    \n    classname\n    \n, \n    \n    \n    createdby\n    \n as \n    \n    createdby\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    customerid\n    \n as \n    \n    customerid\n    \n, \n    \n    \n    customername\n    \n as \n    \n    customername\n    \n, \n    \n    \n    departmentid\n    \n as \n    \n    departmentid\n    \n, \n    \n    \n    departmentname\n    \n as \n    \n    departmentname\n    \n, \n    \n    \n    entry_date\n    \n as \n    \n    entry_date\n    \n, \n    \n    \n    entrydescription\n    \n as \n    \n    entrydescription\n    \n, \n    \n    \n    exchange_rate\n    \n as \n    \n    exchange_rate\n    \n, \n    \n    \n    itemid\n    \n as \n    \n    itemid\n    \n, \n    \n    \n    itemname\n    \n as \n    \n    itemname\n    \n, \n    \n    \n    line_no\n    \n as \n    \n    line_no\n    \n, \n    \n    \n    lineitem\n    \n as \n    \n    lineitem\n    \n, \n    \n    \n    locationid\n    \n as \n    \n    locationid\n    \n, \n    \n    \n    locationname\n    \n as \n    \n    locationname\n    \n, \n    \n    \n    offsetglaccountno\n    \n as \n    \n    offsetglaccountno\n    \n, \n    \n    \n    offsetglaccounttitle\n    \n as \n    \n    offsetglaccounttitle\n    \n, \n    \n    \n    projectid\n    \n as \n    \n    projectid\n    \n, \n    \n    \n    projectname\n    \n as \n    \n    projectname\n    \n, \n    \n    \n    recordkey\n    \n as \n    \n    recordkey\n    \n, \n    \n    \n    recordno\n    \n as \n    \n    recordno\n    \n, \n    \n    \n    recordtype\n    \n as \n    \n    recordtype\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    totalpaid\n    \n as \n    \n    totalpaid\n    \n, \n    \n    \n    totalselected\n    \n as \n    \n    totalselected\n    \n, \n    \n    \n    vendorid\n    \n as \n    \n    vendorid\n    \n, \n    \n    \n    vendorname\n    \n as \n    \n    vendorname\n    \n, \n    \n    \n    whencreated\n    \n as \n    \n    whencreated\n    \n, \n    \n    \n    whenmodified\n    \n as \n    \n    whenmodified\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        cast(recordkey as TEXT) as bill_id,\n        cast(recordno as TEXT) as bill_item_id,\n        _fivetran_synced,\n        accountkey as account_key,\n        accountno as account_no,\n        accounttitle as account_title,\n        amount, \n        basecurr as base_curr,\n        baselocation as base_location,\n        billable, \n        billed,\n        cast(classid as TEXT) as class_id,\n        classname as class_name,\n        createdby as created_by,\n        currency,\n        customerid as customer_id,\n        customername as customer_name,\n        cast(departmentid as TEXT) as department_id,\n        departmentname as department_name,\n        entry_date as entry_date_at,\n        entrydescription as entry_description,\n        exchange_rate,\n        cast(itemid as TEXT) as item_id,\n        itemname as item_name,\n        line_no,\n        lineitem as line_item,\n        cast(locationid as TEXT) as location_id,\n        locationname as location_name,\n        offsetglaccountno as offset_gl_account_no,\n        offsetglaccounttitle as offset_gl_account_title,\n        recordtype as record_type,\n        state,\n        totalpaid as total_item_paid,\n        totalselected as total_selected,\n        vendorid as vendor_id,\n        vendorname as vendor_name,\n        whencreated as created_at,\n        whenmodified as modified_at,\n        projectname as project_name,\n        projectid as project_id\n\n    from fields\n\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__ap_bill_item\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:24.373414Z", "completed_at": "2024-02-27T16:23:24.743709Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:24.745796Z", "completed_at": "2024-02-27T16:23:24.745801Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.4171462059020996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct_source.stg_sage_intacct__ap_bill", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__ap_bill_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    auwhencreated\n    \n as \n    \n    auwhencreated\n    \n, \n    \n    \n    basecurr\n    \n as \n    \n    basecurr\n    \n, \n    \n    \n    billtopaytocontactname\n    \n as \n    \n    billtopaytocontactname\n    \n, \n    \n    \n    billtopaytokey\n    \n as \n    \n    billtopaytokey\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    docnumber\n    \n as \n    \n    docnumber\n    \n, \n    \n    \n    due_in_days\n    \n as \n    \n    due_in_days\n    \n, \n    \n    \n    recordid\n    \n as \n    \n    recordid\n    \n, \n    \n    \n    recordno\n    \n as \n    \n    recordno\n    \n, \n    \n    \n    recordtype\n    \n as \n    \n    recordtype\n    \n, \n    \n    \n    shiptoreturntocontactname\n    \n as \n    \n    shiptoreturntocontactname\n    \n, \n    \n    \n    shiptoreturntokey\n    \n as \n    \n    shiptoreturntokey\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    totaldue\n    \n as \n    \n    totaldue\n    \n, \n    \n    \n    totalentered\n    \n as \n    \n    totalentered\n    \n, \n    \n    \n    totalpaid\n    \n as \n    \n    totalpaid\n    \n, \n    \n    \n    vendorid\n    \n as \n    \n    vendorid\n    \n, \n    \n    \n    vendorname\n    \n as \n    \n    vendorname\n    \n, \n    \n    \n    whencreated\n    \n as \n    \n    whencreated\n    \n, \n    \n    \n    whendue\n    \n as \n    \n    whendue\n    \n, \n    \n    \n    whenmodified\n    \n as \n    \n    whenmodified\n    \n, \n    \n    \n    whenpaid\n    \n as \n    \n    whenpaid\n    \n, \n    \n    \n    whenposted\n    \n as \n    \n    whenposted\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        cast(recordno as TEXT) as bill_id,\n        _fivetran_deleted,\n        _fivetran_synced,\n        auwhencreated as au_created_at,\n        billtopaytocontactname as bill_to_pay_to_contact_name,\n        billtopaytokey as bill_to_pay_to_key,\n        currency,\n        description,\n        docnumber as doc_number,\n        due_in_days as due_in_days,\n        recordid as record_id,\n        recordtype as record_type,\n        shiptoreturntocontactname as ship_to_return_to_contact_name,\n        shiptoreturntokey as ship_to_return_to_key,\n        state,\n        totaldue as total_due,\n        totalentered as total_entered,\n        totalpaid as total_paid,\n        vendorid as vendor_id,\n        vendorname as vendor_name,\n        whencreated as created_at,\n        whendue as due_at,\n        whenmodified as modified_at,\n        whenpaid as paid_at,\n        whenposted as posted_at\n\n    from fields\n)\n\nselect * from final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__ap_bill\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:24.382761Z", "completed_at": "2024-02-27T16:23:24.744254Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:24.746171Z", "completed_at": "2024-02-27T16:23:24.746177Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.3988199234008789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct_source.stg_sage_intacct__ar_invoice", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__ar_invoice_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    auwhencreated\n    \n as \n    \n    auwhencreated\n    \n, \n    cast(null as TEXT) as \n    \n    basecurr\n    \n , \n    \n    \n    billtopaytocontactname\n    \n as \n    \n    billtopaytocontactname\n    \n, \n    \n    \n    billtopaytokey\n    \n as \n    \n    billtopaytokey\n    \n, \n    \n    \n    createdby\n    \n as \n    \n    createdby\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    customerid\n    \n as \n    \n    customerid\n    \n, \n    \n    \n    customername\n    \n as \n    \n    customername\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    docnumber\n    \n as \n    \n    docnumber\n    \n, \n    \n    \n    due_in_days\n    \n as \n    \n    due_in_days\n    \n, \n    \n    \n    megaentityid\n    \n as \n    \n    megaentityid\n    \n, \n    \n    \n    megaentityname\n    \n as \n    \n    megaentityname\n    \n, \n    \n    \n    recordid\n    \n as \n    \n    recordid\n    \n, \n    \n    \n    recordno\n    \n as \n    \n    recordno\n    \n, \n    \n    \n    recordtype\n    \n as \n    \n    recordtype\n    \n, \n    \n    \n    shiptoreturntocontactname\n    \n as \n    \n    shiptoreturntocontactname\n    \n, \n    \n    \n    shiptoreturntokey\n    \n as \n    \n    shiptoreturntokey\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    totaldue\n    \n as \n    \n    totaldue\n    \n, \n    \n    \n    totalentered\n    \n as \n    \n    totalentered\n    \n, \n    \n    \n    totalpaid\n    \n as \n    \n    totalpaid\n    \n, \n    \n    \n    whencreated\n    \n as \n    \n    whencreated\n    \n, \n    cast(null as date) as \n    \n    whendiscount\n    \n , \n    \n    \n    whendue\n    \n as \n    \n    whendue\n    \n, \n    \n    \n    whenmodified\n    \n as \n    \n    whenmodified\n    \n, \n    \n    \n    whenpaid\n    \n as \n    \n    whenpaid\n    \n, \n    \n    \n    whenposted\n    \n as \n    \n    whenposted\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        cast(recordno as TEXT) as invoice_id,\n        _fivetran_deleted,\n        _fivetran_synced,\n        auwhencreated as au_created_at,\n        billtopaytocontactname as bill_to_pay_to_contact_name,\n        billtopaytokey as bill_to_pay_to_key,\n        createdby as created_by,\n        currency,\n        customerid as customer_id,\n        customername as customer_name,\n        description,\n        docnumber as doc_number,\n        due_in_days as due_in_days,\n        megaentityid as mega_entity_id,\n        megaentityname as mega_entity_name,\n        recordid as record_id,\n        recordtype as record_type,\n        shiptoreturntocontactname as ship_to_return_to_contact_name,\n        shiptoreturntokey as ship_to_return_to_key,\n        state,\n        totaldue as total_due,\n        totalentered as total_entered,\n        totalpaid as total_paid,\n        whencreated as created_at,\n        whendue as due_at,\n        whenmodified as modified_at,\n        whenpaid as paid_at,\n        whenposted as posted_at\n\n    from fields\n)\n\nselect * from final\nwhere not coalesce(_fivetran_deleted, false)", "relation_name": "\"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__ar_invoice\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:24.386773Z", "completed_at": "2024-02-27T16:23:24.743410Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:24.745410Z", "completed_at": "2024-02-27T16:23:24.745416Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3989417552947998, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct_source.stg_sage_intacct__ar_invoice_item", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__ar_invoice_item_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    accountkey\n    \n as \n    \n    accountkey\n    \n, \n    \n    \n    accountno\n    \n as \n    \n    accountno\n    \n, \n    \n    \n    accounttitle\n    \n as \n    \n    accounttitle\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    basecurr\n    \n as \n    \n    basecurr\n    \n, \n    \n    \n    baselocation\n    \n as \n    \n    baselocation\n    \n, \n    \n    \n    classid\n    \n as \n    \n    classid\n    \n, \n    \n    \n    classname\n    \n as \n    \n    classname\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    customerid\n    \n as \n    \n    customerid\n    \n, \n    \n    \n    customername\n    \n as \n    \n    customername\n    \n, \n    \n    \n    departmentid\n    \n as \n    \n    departmentid\n    \n, \n    \n    \n    departmentname\n    \n as \n    \n    departmentname\n    \n, \n    \n    \n    entry_date\n    \n as \n    \n    entry_date\n    \n, \n    \n    \n    entrydescription\n    \n as \n    \n    entrydescription\n    \n, \n    \n    \n    exchange_rate\n    \n as \n    \n    exchange_rate\n    \n, \n    \n    \n    itemid\n    \n as \n    \n    itemid\n    \n, \n    \n    \n    itemname\n    \n as \n    \n    itemname\n    \n, \n    \n    \n    line_no\n    \n as \n    \n    line_no\n    \n, \n    \n    \n    lineitem\n    \n as \n    \n    lineitem\n    \n, \n    \n    \n    locationid\n    \n as \n    \n    locationid\n    \n, \n    \n    \n    locationname\n    \n as \n    \n    locationname\n    \n, \n    \n    \n    offsetglaccountno\n    \n as \n    \n    offsetglaccountno\n    \n, \n    \n    \n    offsetglaccounttitle\n    \n as \n    \n    offsetglaccounttitle\n    \n, \n    \n    \n    recordkey\n    \n as \n    \n    recordkey\n    \n, \n    \n    \n    recordno\n    \n as \n    \n    recordno\n    \n, \n    \n    \n    recordtype\n    \n as \n    \n    recordtype\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    totalpaid\n    \n as \n    \n    totalpaid\n    \n, \n    \n    \n    totalselected\n    \n as \n    \n    totalselected\n    \n, \n    \n    \n    vendorid\n    \n as \n    \n    vendorid\n    \n, \n    \n    \n    vendorname\n    \n as \n    \n    vendorname\n    \n, \n    \n    \n    warehouseid\n    \n as \n    \n    warehouseid\n    \n, \n    \n    \n    warehousename\n    \n as \n    \n    warehousename\n    \n, \n    \n    \n    whencreated\n    \n as \n    \n    whencreated\n    \n, \n    \n    \n    whenmodified\n    \n as \n    \n    whenmodified\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        cast(recordkey as TEXT) as invoice_id,\n        cast(recordno as TEXT) as invoice_item_id,\n        _fivetran_synced,\n        accountkey as account_key,\n        accountno as account_no,\n        accounttitle as account_title,\n        amount,\n        basecurr as base_curr,\n        baselocation as base_location,\n        cast(classid as TEXT) as class_id,\n        classname as class_name,\n        currency,\n        customerid as customer_id,\n        customername as customer_name,\n        cast(departmentid as TEXT) as department_id,\n        departmentname as department_name,\n        entry_date as entry_date_at,\n        entrydescription as entry_description,\n        exchange_rate as exchange_rate,\n        cast(itemid as TEXT) as item_id,\n        itemname as item_name,\n        line_no as line_no,\n        lineitem as line_item,\n        cast(locationid as TEXT) as location_id,\n        locationname as location_name,\n        offsetglaccountno as offset_gl_account_no,\n        offsetglaccounttitle as offset_gl_account_title,\n        recordtype as record_type,\n        state,\n        totalpaid as total_item_paid,\n        totalselected as total_selected,\n        vendorid as vendor_id,\n        vendorname as vendor_name,\n        whencreated as created_at,\n        whenmodified as modified_at,\n        warehouseid as warehouse_id,\n        warehousename as warehouse_name\n\n    from fields\n)\n\nselect * from final", "relation_name": "\"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__ar_invoice_item\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:24.793205Z", "completed_at": "2024-02-27T16:23:24.801876Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:24.802385Z", "completed_at": "2024-02-27T16:23:24.802391Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019436120986938477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct_source.not_null_stg_sage_intacct__ap_bill_item_bill_item_id.b04aef5c32", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect bill_item_id\nfrom \"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__ap_bill_item\"\nwhere bill_item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:24.804342Z", "completed_at": "2024-02-27T16:23:24.809418Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:24.809953Z", "completed_at": "2024-02-27T16:23:24.809958Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006766796112060547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct_source.unique_stg_sage_intacct__ap_bill_item_bill_item_id.2260e805c7", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    bill_item_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__ap_bill_item\"\nwhere bill_item_id is not null\ngroup by bill_item_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:24.811866Z", "completed_at": "2024-02-27T16:23:24.815182Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:24.815693Z", "completed_at": "2024-02-27T16:23:24.815698Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005168914794921875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct_source.not_null_stg_sage_intacct__ap_bill_bill_id.fe38d18a79", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect bill_id\nfrom \"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__ap_bill\"\nwhere bill_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:24.817676Z", "completed_at": "2024-02-27T16:23:24.820755Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:24.821315Z", "completed_at": "2024-02-27T16:23:24.821320Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004903078079223633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct_source.unique_stg_sage_intacct__ap_bill_bill_id.e2a5df2046", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    bill_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__ap_bill\"\nwhere bill_id is not null\ngroup by bill_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:24.823375Z", "completed_at": "2024-02-27T16:23:24.826752Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:24.827425Z", "completed_at": "2024-02-27T16:23:24.827430Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005311012268066406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct_source.not_null_stg_sage_intacct__ar_invoice_invoice_id.77d5f96cb9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect invoice_id\nfrom \"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__ar_invoice\"\nwhere invoice_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:24.829301Z", "completed_at": "2024-02-27T16:23:24.832590Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:24.833089Z", "completed_at": "2024-02-27T16:23:24.833094Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004995107650756836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct_source.not_null_stg_sage_intacct__ar_invoice_item_invoice_item_id.8484540965", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect invoice_item_id\nfrom \"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__ar_invoice_item\"\nwhere invoice_item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:24.834943Z", "completed_at": "2024-02-27T16:23:24.837831Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:24.838319Z", "completed_at": "2024-02-27T16:23:24.838323Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004594087600708008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct_source.unique_stg_sage_intacct__ar_invoice_invoice_id.fd61e50a78", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    invoice_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__ar_invoice\"\nwhere invoice_id is not null\ngroup by invoice_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:24.840165Z", "completed_at": "2024-02-27T16:23:24.843956Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:24.844499Z", "completed_at": "2024-02-27T16:23:24.844504Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005532979965209961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct_source.unique_stg_sage_intacct__ar_invoice_item_invoice_item_id.ae8a6fe24c", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    invoice_item_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__ar_invoice_item\"\nwhere invoice_item_id is not null\ngroup by invoice_item_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:24.784449Z", "completed_at": "2024-02-27T16:23:25.101416Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:25.101975Z", "completed_at": "2024-02-27T16:23:25.101978Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.3449280261993408, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct_source.stg_sage_intacct__gl_batch", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__gl_batch_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    baselocation\n    \n as \n    \n    baselocation\n    \n, \n    \n    \n    baselocation_no\n    \n as \n    \n    baselocation_no\n    \n, \n    \n    \n    batch_date\n    \n as \n    \n    batch_date\n    \n, \n    \n    \n    batch_title\n    \n as \n    \n    batch_title\n    \n, \n    \n    \n    batchno\n    \n as \n    \n    batchno\n    \n, \n    \n    \n    createdby\n    \n as \n    \n    createdby\n    \n, \n    \n    \n    journal\n    \n as \n    \n    journal\n    \n, \n    \n    \n    megaentityid\n    \n as \n    \n    megaentityid\n    \n, \n    \n    \n    megaentitykey\n    \n as \n    \n    megaentitykey\n    \n, \n    \n    \n    megaentityname\n    \n as \n    \n    megaentityname\n    \n, \n    \n    \n    modified\n    \n as \n    \n    modified\n    \n, \n    \n    \n    modifiedby\n    \n as \n    \n    modifiedby\n    \n, \n    \n    \n    modifiedbyid\n    \n as \n    \n    modifiedbyid\n    \n, \n    \n    \n    module\n    \n as \n    \n    module\n    \n, \n    \n    \n    prbatchkey\n    \n as \n    \n    prbatchkey\n    \n, \n    \n    \n    recordno\n    \n as \n    \n    recordno\n    \n, \n    \n    \n    referenceno\n    \n as \n    \n    referenceno\n    \n, \n    \n    \n    reversed\n    \n as \n    \n    reversed\n    \n, \n    \n    \n    reversedfrom\n    \n as \n    \n    reversedfrom\n    \n, \n    \n    \n    reversedkey\n    \n as \n    \n    reversedkey\n    \n, \n    \n    \n    state\n    \n as \n    \n    state\n    \n, \n    \n    \n    taximplications\n    \n as \n    \n    taximplications\n    \n, \n    \n    \n    templatekey\n    \n as \n    \n    templatekey\n    \n, \n    \n    \n    userinfo_loginid\n    \n as \n    \n    userinfo_loginid\n    \n, \n    \n    \n    userkey\n    \n as \n    \n    userkey\n    \n, \n    \n    \n    whencreated\n    \n as \n    \n    whencreated\n    \n, \n    \n    \n    whenmodified\n    \n as \n    \n    whenmodified\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_deleted,\n        _fivetran_synced,\n        baselocation as base_location,\n        baselocation_no as base_location_no,\n        batch_date,\n        batch_title,\n        batchno as batch_no,\n        createdby as created_by,\n        journal,\n        megaentityid as mega_entity_id,\n        megaentitykey as mega_entity_key,\n        megaentityname as mega_entity_name,\n        modified,\n        modifiedby as modified_by,\n        modifiedbyid as modified_by_id,\n        module,\n        prbatchkey as pr_batch_key,\n        recordno as record_no,\n        referenceno as reference_no,\n        reversed,\n        reversedfrom as reversed_from,\n        reversedkey as reversed_key,\n        state,\n        taximplications as tax_implications,\n        templatekey as template_key,\n        userinfo_loginid as user_info_login_id,\n        userkey as user_key,\n        whencreated as when_created,\n        whenmodified as when_modified\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__gl_batch\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:24.788770Z", "completed_at": "2024-02-27T16:23:25.102573Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:25.103067Z", "completed_at": "2024-02-27T16:23:25.103069Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.34496307373046875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct_source.stg_sage_intacct__gl_detail", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__gl_detail_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    _fivetran_synced\n    \n , \n    \n    \n    accountno\n    \n as \n    \n    accountno\n    \n, \n    \n    \n    accounttitle\n    \n as \n    \n    accounttitle\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    cast(null as TEXT) as \n    \n    basecurr\n    \n , \n    \n    \n    batch_date\n    \n as \n    \n    batch_date\n    \n, \n    \n    \n    batch_no\n    \n as \n    \n    batch_no\n    \n, \n    \n    \n    batch_title\n    \n as \n    \n    batch_title\n    \n, \n    \n    \n    batchkey\n    \n as \n    \n    batchkey\n    \n, \n    \n    \n    bookid\n    \n as \n    \n    bookid\n    \n, \n    cast(null as TEXT) as \n    \n    classid\n    \n , \n    cast(null as TEXT) as \n    \n    classname\n    \n , \n    \n    \n    creditamount\n    \n as \n    \n    creditamount\n    \n, \n    cast(null as TEXT) as \n    \n    currency\n    \n , \n    \n    \n    customerid\n    \n as \n    \n    customerid\n    \n, \n    \n    \n    customername\n    \n as \n    \n    customername\n    \n, \n    \n    \n    debitamount\n    \n as \n    \n    debitamount\n    \n, \n    cast(null as TEXT) as \n    \n    departmentid\n    \n , \n    cast(null as TEXT) as \n    \n    departmenttitle\n    \n , \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    docnumber\n    \n as \n    \n    docnumber\n    \n, \n    cast(null as TEXT) as \n    \n    document\n    \n , \n    \n    \n    entry_date\n    \n as \n    \n    entry_date\n    \n, \n    \n    \n    entry_state\n    \n as \n    \n    entry_state\n    \n, \n    \n    \n    entrydescription\n    \n as \n    \n    entrydescription\n    \n, \n    \n    \n    line_no\n    \n as \n    \n    line_no\n    \n, \n    cast(null as TEXT) as \n    \n    locationid\n    \n , \n    cast(null as TEXT) as \n    \n    locationname\n    \n , \n    cast(null as timestamp) as \n    \n    modified\n    \n , \n    cast(null as TEXT) as \n    \n    prdescription\n    \n , \n    \n    \n    recordid\n    \n as \n    \n    recordid\n    \n, \n    \n    \n    recordno\n    \n as \n    \n    recordno\n    \n, \n    \n    \n    recordtype\n    \n as \n    \n    recordtype\n    \n, \n    \n    \n    totaldue\n    \n as \n    \n    totaldue\n    \n, \n    \n    \n    totalentered\n    \n as \n    \n    totalentered\n    \n, \n    \n    \n    totalpaid\n    \n as \n    \n    totalpaid\n    \n, \n    \n    \n    tr_type\n    \n as \n    \n    tr_type\n    \n, \n    \n    \n    trx_amount\n    \n as \n    \n    trx_amount\n    \n, \n    \n    \n    trx_creditamount\n    \n as \n    \n    trx_creditamount\n    \n, \n    \n    \n    trx_debitamount\n    \n as \n    \n    trx_debitamount\n    \n, \n    \n    \n    vendorid\n    \n as \n    \n    vendorid\n    \n, \n    \n    \n    vendorname\n    \n as \n    \n    vendorname\n    \n, \n    \n    \n    whencreated\n    \n as \n    \n    whencreated\n    \n, \n    \n    \n    whendue\n    \n as \n    \n    whendue\n    \n, \n    \n    \n    whenmodified\n    \n as \n    \n    whenmodified\n    \n, \n    \n    \n    whenpaid\n    \n as \n    \n    whenpaid\n    \n\n\n\n        --The below script allows for pass through columns.\n        \n        \n    from base\n),\n\nfinal as (\n    \n    select \n        recordno as gl_detail_id,\n        cast(accountno as TEXT) as account_no,\n        accounttitle as account_title,\n        amount,\n        batch_date,\n        batch_no,\n        batch_title,\n        batchkey as batch_key,\n        bookid as book_id,\n        classid as class_id,\n        classname as class_name,\n        creditamount as credit_amount,\n        debitamount as debit_amount,\n        currency,\n        customerid as customer_id,\n        customername as customer_name,\n        departmentid as department_id,\n        departmenttitle as department_title,\n        description,\n        docnumber as doc_number,\n        entry_date as entry_date_at,\n        entry_state,\n        entrydescription as entry_description,\n        line_no,\n        locationid as location_id,\n        locationname as location_name,\n        prdescription as pr_description,\n        recordid as record_id,\n        recordtype as record_type,\n        totaldue as total_due,\n        totalentered as total_entered,\n        totalpaid as total_paid,\n        tr_type,\n        trx_amount,\n        trx_creditamount as trx_credit_amount,\n        trx_debitamount as trx_debit_amount,\n        vendorid as vendor_id,\n        vendorname as vendor_name,\n        whencreated as created_at,\n        whendue as due_at,\n        whenmodified as modified_at,\n        whenpaid as paid_at\n\n\n        --The below script allows for pass through columns.\n        \n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__gl_detail\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:24.771991Z", "completed_at": "2024-02-27T16:23:25.100332Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:25.100885Z", "completed_at": "2024-02-27T16:23:25.100892Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.3584480285644531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.sage_intacct_source.stg_sage_intacct__gl_account", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__gl_account_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    accountno\n    \n as \n    \n    accountno\n    \n, \n    \n    \n    accounttype\n    \n as \n    \n    accounttype\n    \n, \n    \n    \n    alternativeaccount\n    \n as \n    \n    alternativeaccount\n    \n, \n    \n    \n    category\n    \n as \n    \n    category\n    \n, \n    \n    \n    categorykey\n    \n as \n    \n    categorykey\n    \n, \n    \n    \n    closetoacctkey\n    \n as \n    \n    closetoacctkey\n    \n, \n    \n    \n    closingaccountno\n    \n as \n    \n    closingaccountno\n    \n, \n    \n    \n    closingaccounttitle\n    \n as \n    \n    closingaccounttitle\n    \n, \n    \n    \n    closingtype\n    \n as \n    \n    closingtype\n    \n, \n    \n    \n    createdby\n    \n as \n    \n    createdby\n    \n, \n    \n    \n    modifiedby\n    \n as \n    \n    modifiedby\n    \n, \n    \n    \n    normalbalance\n    \n as \n    \n    normalbalance\n    \n, \n    \n    \n    recordno\n    \n as \n    \n    recordno\n    \n, \n    cast(null as boolean) as \n    \n    requireclass\n    \n , \n    cast(null as boolean) as \n    \n    requirecustomer\n    \n , \n    cast(null as boolean) as \n    \n    requiredept\n    \n , \n    cast(null as boolean) as \n    \n    requireemployee\n    \n , \n    cast(null as boolean) as \n    \n    requireitem\n    \n , \n    cast(null as boolean) as \n    \n    requireloc\n    \n , \n    cast(null as boolean) as \n    \n    requireproject\n    \n , \n    cast(null as boolean) as \n    \n    requirevendor\n    \n , \n    cast(null as boolean) as \n    \n    requirewarehouse\n    \n , \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    taxable\n    \n as \n    \n    taxable\n    \n, \n    \n    \n    title\n    \n as \n    \n    title\n    \n, \n    \n    \n    whencreated\n    \n as \n    \n    whencreated\n    \n, \n    \n    \n    whenmodified\n    \n as \n    \n    whenmodified\n    \n\n\n\n        --The below script allows for pass through columns.\n        \n\n    from base\n),\n\nfinal as (\n    \n    select \n        cast(accountno as TEXT) as account_no,\n        _fivetran_deleted,\t\n        _fivetran_synced,\t\n        accounttype as account_type,\t\n        alternativeaccount as alternative_account,\t\n        category,\t\n        categorykey as category_key,\t\n        closetoacctkey as close_to_acct_key,\t\n        closingaccountno as closing_account_no,\t\n        closingaccounttitle as closing_account_title,\t\n        closingtype as closing_type,\t\n        createdby as created_by,\t\n        modifiedby as modified_by,\t\n        normalbalance as normal_balance,\t\n        recordno as gl_account_id,\t\n        status,\t\n        taxable,\t\n        title,\t\n        whencreated as created_at,\t\n        whenmodified as modified_at\t\n\n        --The below script allows for pass through columns.\n        \n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__gl_account\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:25.130942Z", "completed_at": "2024-02-27T16:23:25.136652Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:25.146409Z", "completed_at": "2024-02-27T16:23:25.146422Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016934871673583984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct_source.not_null_stg_sage_intacct__gl_batch_record_no.3a48362967", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect record_no\nfrom \"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__gl_batch\"\nwhere record_no is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:25.143536Z", "completed_at": "2024-02-27T16:23:25.148548Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:25.153367Z", "completed_at": "2024-02-27T16:23:25.153373Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01825094223022461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct_source.not_null_stg_sage_intacct__gl_detail_gl_detail_id.7aacb98523", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect gl_detail_id\nfrom \"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__gl_detail\"\nwhere gl_detail_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:25.140620Z", "completed_at": "2024-02-27T16:23:25.149057Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:25.153706Z", "completed_at": "2024-02-27T16:23:25.153710Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.019477128982543945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct_source.not_null_stg_sage_intacct__gl_account_gl_account_id.23d60f53d5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect gl_account_id\nfrom \"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__gl_account\"\nwhere gl_account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:25.137845Z", "completed_at": "2024-02-27T16:23:25.149301Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:25.154056Z", "completed_at": "2024-02-27T16:23:25.154059Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.020595788955688477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct_source.unique_stg_sage_intacct__gl_batch_record_no.44cae4a3d2", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    record_no as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__gl_batch\"\nwhere record_no is not null\ngroup by record_no\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:25.149886Z", "completed_at": "2024-02-27T16:23:25.154894Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:25.157327Z", "completed_at": "2024-02-27T16:23:25.157331Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009938955307006836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct_source.unique_stg_sage_intacct__gl_account_gl_account_id.cde46d65d0", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    gl_account_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__gl_account\"\nwhere gl_account_id is not null\ngroup by gl_account_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-27T16:23:25.158387Z", "completed_at": "2024-02-27T16:23:25.162371Z"}, {"name": "execute", "started_at": "2024-02-27T16:23:25.162875Z", "completed_at": "2024-02-27T16:23:25.162879Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.006439208984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.sage_intacct_source.unique_stg_sage_intacct__gl_detail_gl_detail_id.7b9b06a0f4", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    gl_detail_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"sage_intacct_source_integration_tests_2_sage_intacct_staging\".\"stg_sage_intacct__gl_detail\"\nwhere gl_detail_id is not null\ngroup by gl_detail_id\nhaving count(*) > 1\n\n\n", "relation_name": null}], "elapsed_time": 1.7828831672668457, "args": {"quiet": false, "indirect_selection": "eager", "exclude": [], "log_format": "default", "print": true, "project_dir": "/Users/joseph.markiewicz/Documents/dbt_packages/sage_intacct/dbt_sage_intacct_source/integration_tests", "populate_cache": true, "profiles_dir": "/Users/joseph.markiewicz/.dbt", "log_format_file": "debug", "send_anonymous_usage_stats": true, "empty_catalog": false, "macro_debugging": false, "log_level": "info", "write_json": true, "strict_mode": false, "use_colors": true, "use_colors_file": true, "version_check": true, "static_parser": true, "log_level_file": "debug", "log_file_max_bytes": 10485760, "which": "generate", "favor_state": false, "defer": false, "cache_selected_only": false, "vars": {}, "enable_legacy_logger": false, "partial_parse": true, "partial_parse_file_diff": true, "target": "postgres", "show_resource_report": false, "log_path": "/Users/joseph.markiewicz/Documents/dbt_packages/sage_intacct/dbt_sage_intacct_source/integration_tests/logs", "static": false, "select": [], "compile": true, "printer_width": 80, "invocation_command": "dbt docs generate -t postgres", "warn_error_options": {"include": [], "exclude": []}, "introspect": true}}